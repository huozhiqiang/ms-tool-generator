package ${package}.biz;

import com.yss.ms.api.business.plan.PlanPlaninfoInfo;
import com.yss.ms.api.business.plan.PlanUnifiedplanInfo;
import ${package}.biz.${className}Biz;
import ${package}.vo.${className}VO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import ${package}.entity.${className};
import org.springframework.beans.BeanUtils;

import java.util.Map;
import java.util.ArrayList;
import java.util.List;

/**
 * ${comments}Service
 *
 * @Author: ${author}
 * @Date: ${datetime}
 */
@Service
public class ${className}Service {

    @Autowired
    private ${className}Repository ${classname}Repository;

    /**
     * 新增
     *
     * @Author: ${author}
     * @Date: ${datetime}
     */
    @Transactional(rollbackFor = ErrorException.class)
    public void add(${className}Entity ${classname}Entity)throws ErrorException {
        ${classname}Entity.setCreateTime(new Date());
        ${classname}Repository.save(${classname}Entity);
    }

    /**
     * 删除
     *
     * @Author: ${author}
     * @Date: ${datetime}
     */
    @Transactional(rollbackFor = ErrorException.class)
    public void deleteById(String id)throws ErrorException {
        ${classname}Repository.deleteById(id);
    }

    /**
     * 更新
     *
     * @Author: ${author}
     * @Date: ${datetime}
     */
    @Transactional(rollbackFor = ErrorException.class)
    public void update(${className}Entity ${classname}Entity)throws ErrorException{
        ${classname}Repository.save(${classname}Entity);
    }

    /**
     * 根据主键查询
     *
     * @Author: ${author}
     * @Date: ${datetime}
     */
    public ${className}Entity findById(String id)throws ErrorException {
        ${className}Entity ${classname}Entity = ${classname}Repository.getOne(id);

        return ${classname}Entity;
    }

    /**
     * 条件查询
     *
     * @Author: ${author}
     * @Date: ${datetime}
     */
    public Map<String,Object> selectByCondition(Map<String, Object> params)throws ErrorException{

        return null;
    }

}